{"version":3,"sources":["components/Date/FullDateLeft.js","components/Date/FullDateRight.js","components/Date/DateSection.js","components/TodoForm.js","components/Todo.js","components/TodoList.js","components/TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["FullDateLeft","monthName","Date","getMonth","dateNumber","getDate","dateYear","getFullYear","className","FullDateRight","day","getDay","hoursLeft","moment","endOf","fromNow","DateSection","TodoForm","props","onFormSubmit","item","onItemChange","onSubmit","type","value","onChange","placeholder","Todo","details","TodoList","todos","onDeleteClick","onToggleClick","map","todo","isComplete","onClick","id","TodoApp","useState","setTodos","setItem","e","target","preventDefault","test","uuid","filter","completedTodos","App","style","display","alignItems","justifyContent","height","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAkDeA,MAhDf,WAKI,IAEMC,EADa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QAD5E,IAAIC,MAAOC,WAAa,EAEF,GAGrCC,GAAc,IAAIF,MAAOG,UAGzBC,GAAY,IAAIJ,MAAOK,cAgB7B,OAEI,sBAAKC,UAAU,wBAAf,UAEI,qBAAKA,UAAU,kBAAf,SAEI,oBAAIA,UAAU,iBAAd,SAAgCJ,MAGpC,sBAAKI,UAAU,iBAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgCP,IAChC,oBAAIO,UAAU,iBAAd,SAAgCF,W,gBCLjCG,MAlCf,WAMI,IACMC,EADO,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,aACzD,IAAIR,MAAOS,UAItBC,EAAYC,MAASC,MAAM,OAAOC,UAYxC,OACI,qBAAKP,UAAU,yBAAf,SAEI,sBAAKA,UAAU,gBAAf,UACI,oBAAIA,UAAU,YAAd,SAA2BE,IAC3B,qBAAIF,UAAU,sBAAd,sBAA8CI,W,MCA/CI,MAzBf,WAaI,OACI,sBAAKR,UAAU,uBAAf,UAEI,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCPGS,MAbf,SAAkBC,GAAQ,IAEfC,EAAoCD,EAApCC,aAAcC,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,aAG3B,OACI,uBAAMb,UAAU,aAAac,SAAUH,EAAvC,UACI,uBAAOX,UAAU,cAAce,KAAK,OAAOC,MAAOJ,EAAMK,SAAUJ,EAAcK,YAAY,+BAC5F,wBAAQlB,UAAU,YAAlB,qB,MCEGmB,MATf,YAA0B,IAAXC,EAAU,EAAVA,QAEX,OAEQ,mBAAGpB,UAAU,YAAb,SAA0BoB,EAAQR,Q,aCkC/BS,MAnCf,YAA0D,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,cAErC,OAEI,qBAAKxB,UAAU,gBAAf,SAEI,oBAAIA,UAAU,sBAAd,SAEKsB,EAAMG,KAAI,SAAAC,GAAI,OAEX,qBAAK1B,UAAW0B,EAAKC,WAAa,kCAAoC,yBAAtE,SAEI,qBAAI3B,UAAU,aAAd,UACI,cAAC,EAAD,CAAMoB,QAASM,IAEf,gCAEI,cAAC,IAAD,CAAQ1B,UAAU,eAAe4B,QAAS,kBAAMJ,EAAcE,EAAKG,OACnE,cAAC,IAAD,CAAU7B,UAAU,eAAe4B,QAAS,kBAAML,EAAcG,EAAKG,YAN7CH,EAAKG,c,sBC6C9CC,MAxDf,WAAoB,IAAD,EAEWC,mBAAS,IAFpB,mBAERT,EAFQ,KAEDU,EAFC,OAGSD,mBAAS,IAHlB,mBAGRnB,EAHQ,KAGFqB,EAHE,KAyCf,OACI,sBAAKjC,UAAU,oBAAf,UAEI,cAAC,EAAD,IACA,qBAAKA,UAAU,QAAf,SACI,gDAEJ,cAAC,EAAD,CAAUY,KAAMA,EAAMC,aA3C9B,SAA0BqB,GACtBD,EAAQC,EAAEC,OAAOnB,QA0CyCL,aAvC9D,SAA0BuB,GACtBA,EAAEE,iBAEGxB,IAAQ,QAAQyB,KAAKzB,KAI1BoB,EAAS,GAAD,mBAAKV,GAAL,CAAY,CAChBO,GAAIS,MACJ1B,KAAMA,MAIVqB,EAAQ,QA2BJ,cAAC,EAAD,CAAUX,MAAOA,EAAOC,cAZhC,SAA2BM,GACxBG,EAASV,EAAMiB,QAAO,SAAAb,GAAI,OAAIA,EAAKG,KAAOA,OAWqBL,cAvBlE,SAA8BK,GAC1B,IAAMW,EAAiBlB,EAAMG,KAAI,SAAAC,GAI7B,OAHIA,EAAKG,KAAOA,IACZH,EAAKC,YAAcD,EAAKC,YAErBD,KAGXM,EAASQ,UCrCF,SAASC,IASpB,OACI,mCACA,qBAAKC,MATS,CACdC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,OACRC,gBAAiB,SAIjB,SAEI,cAAC,EAAD,QClBZ,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClB,EAAD,MAEFmB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.18a0e30a.chunk.js","sourcesContent":["import React from 'react';\n\nfunction FullDateLeft() {\n\n    //DATE MODIFY\n\n    // Select month based on Abbreviation\n    const monthNumber = (new Date().getMonth() + 1);\n    const monthNames = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n    const monthName = monthNames[monthNumber - 1];\n\n    //Date selector\n    const dateNumber = (new Date().getDate());\n\n    //Year selector\n    const dateYear = (new Date().getFullYear())\n\n    //STYLES\n\n    // const fullDateLeftContainer = {display: 'flex', textAlign: 'left', height: '100%', width: '50%',}\n\n    // const fullDateLeftDay = {display: 'flex',alignItems: 'center', float: 'right',height: '100%',/* width: '35%' */ width: '18%',}\n\n    // const fullDateLeftMY = {float: 'left', height: '100%', width: '50%', display: 'flex', flexDirection: 'column', justifyContent: 'center', paddingLeft: '0px'}\n\n    // const monthNameStyle = {fontSize: '65px', margin: '0', fontWeight: '400'}\n\n    // const fullDateRight1 = {margin: '5px', fontWeight: '900', letterSpacing: '5.5px',}\n\n    // const fullDateRight2 = {margin: '5px', color: '#C0C0C0',fontWeight: '600',}\n        \n    return (\n\n        <div className='fullDateLeftContainer'>\n\n            <div className='fullDateLeftDay'>\n\n                <h1 className='monthNameStyle'>{dateNumber}</h1>        \n            </div>\n\n            <div className='fullDateLeftMY'>\n                <h4 className='fullDateRight1'>{monthName}</h4>\n                <h4 className='fullDateRight2'>{dateYear}</h4>\n            </div>\n\n        </div>\n    \n    )\n}\n\nexport default FullDateLeft\n","import React from 'react';\nimport moment from 'moment';\n\nfunction FullDateRight() {\n\n    //DATE MODIFY\n\n    // Day of the week selector\n\n    const days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\n    const day = days[new Date().getDay()];\n\n    // Moment.js - To determine how long till midnight\n\n    const hoursLeft = moment().endOf('day').fromNow();\n\n    // Styles for FullDateRight\n\n    // const fullDateRightContainer = {display: 'flex',justifyContent: 'flex-end',textAlign: 'right',height: '100%',width: '50%',}\n\n    // const fullDateRight = {display: 'flex',alignItems: 'right', flexDirection: 'column',justifyContent: 'center', paddingLeft: '0px'}\n\n    // const dayStyles = {margin: '5px', fontSize: '20px', fontWeight: '600'}\n\n    // const timeRemainingStyles = {margin: '5px', fontSize: '12px', fontWeight: '900', color: '#059669'}\n\n    return (\n        <div className='fullDateRightContainer'>\n            \n            <div className='fullDateRight'>\n                <h3 className='dayStyles'>{day}</h3>  \n                <h3 className='timeRemainingStyles'>Complete {hoursLeft}</h3>      \n            </div>\n        </div>\n    )\n}\n\nexport default FullDateRight;\n","import React from 'react';\nimport FullDateLeft from './FullDateLeft';\nimport FullDateRight from './FullDateRight';\nimport './Date.css';\n\n\nfunction DateSection() {\n\n    // STYLES\n    // const dateSectionContainer = {\n    //     display: 'flex', \n    //     alignItems: 'center', \n    //     justifyContent: 'center', \n    //     height: '25%', \n    //     width: '100%', \n    //     backgroundColor: 'white',\n    //     marginTop: '5%',\n    // }; \n\n    return (\n        <div className='dateSectionContainer'>\n\n            <FullDateLeft />\n            <FullDateRight />\n            \n        </div>\n    )\n\n\n}\n\nexport default DateSection;\n","import React from 'react';\nimport './Styles/TodoForm.css'\n\nfunction TodoForm(props) {\n\n    const {onFormSubmit, item, onItemChange} = props;\n\n\n    return (\n        <form className='formStyles' onSubmit={onFormSubmit}>\n            <input className='inputStyles' type='text' value={item} onChange={onItemChange} placeholder=\"What are your plans today?\"/>\n            <button className='btnStyles'>Add</button>\n        </form>\n    )\n}\n\nexport default TodoForm;\n\n\n","import React from 'react';\nimport './Styles/todo.css'\n\n\nfunction Todo({details}) {\n\n    return (\n\n            <p className='itemStyle'>{details.item}</p>\n\n    )\n}\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './Todo';\nimport { MdDelete } from \"react-icons/md\";\nimport { MdDone } from \"react-icons/md\";\nimport './Styles/TodoList.css'\n\n\nfunction TodoList({todos, onDeleteClick, onToggleClick}) {\n\n    return (\n\n        <div className='listContainer'>\n\n            <ul className='unorderedListStyles'>\n\n                {todos.map(todo => \n\n                    <div className={todo.isComplete ? 'completionButtonStlyes complete' : 'completionButtonStlyes'}>\n                        \n                        <li className='listStyles' key={todo.id}>\n                            <Todo details={todo} />\n                            \n                            <div>\n\n                                <MdDone className='buttonStlyes' onClick={() => onToggleClick(todo.id)}/>\n                                <MdDelete className='buttonStlyes' onClick={() => onDeleteClick(todo.id)}/>\n                                \n\n                            </div>\n                        </li>\n\n                    </div>\n\n                )}\n\n            </ul>\n\n        </div>\n\n    )\n}\n\nexport default TodoList;\n\n\n","import React, {useState} from 'react';\nimport DateSection from './Date/DateSection';\nimport TodoForm from './TodoForm'\nimport TodoList from './TodoList';\nimport uuid from 'react-uuid';\nimport './Styles/TodoApp.css'\n\n\nfunction TodoApp() {\n\n    const [todos, setTodos] = useState([]);\n    const [item, setItem] = useState('');\n\n    function handleItemChange(e) {\n        setItem(e.target.value)\n    }\n\n    function handleFormSubmit(e) {\n        e.preventDefault();\n\n        if (!item || /^\\s*$/.test(item)) {\n            return;\n          }\n\n        setTodos([...todos, {\n            id: uuid(),\n            item: item,\n            \n        }]);\n\n        setItem('');\n\n    }\n\n    function handleToggleComplete(id) {\n        const completedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n\n        setTodos(completedTodos);\n      };\n\n    function handleDeleteClick(id) {\n       setTodos(todos.filter(todo => todo.id !== id));\n    };\n\n    return (\n        <div className='todoFormContainer'>\n\n            <DateSection />\n            <div className='title'>\n                <h2>Today's List</h2>\n            </div>\n            <TodoForm item={item} onItemChange={handleItemChange} onFormSubmit={handleFormSubmit}/>\n            <TodoList todos={todos} onDeleteClick={handleDeleteClick} onToggleClick={handleToggleComplete}/>\n    \n        </div>\n\n    )\n}\n\nexport default TodoApp;\n","import React, {useState} from \"react\";\nimport TodoApp from \"./components/TodoApp\";\n\n\n\nexport default function App() {\n\n    const container = {\n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center', \n        height: '100%', \n        backgroundColor: 'white'};\n    \n    return (\n        <>\n        <div style={container}>\n\n            <TodoApp />\n\n        </div>\n        \n        </>\n    )\n    \n};\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}